{"version":3,"sources":["styles/svg/logo.svg","backend/tweet/data/tweets.js","backend/tweet/data/users.js","backend/tweet/tweet.backend.js","services/tweet/tweet.service.js","actions/users.actions.js","actions/tweets.actions.js","actions/authenticatedUser.actions.js","actions/shared.actions.js","utils/tweet.utility.js","components/tweets/detail/tweets.detail.component.js","components/tweets/list/tweets.list.component.js","components/tweets/compose/tweets.compose.component.js","components/tweets/page/tweetsPage.component.js","views/dashboard/dashboard.component.js","components/loading/loading.component.js","components/footer/footer.component.js","components/navbar/navbar.component.js","App.js","serviceWorker.js","reducers/index.js","reducers/authenticatedUser.reducer.js","reducers/users.reducer.js","reducers/tweets.reducer.js","middlewares/logger.middleware.js","middlewares/index.js","index.js"],"names":["module","exports","tweets","id","text","author","timestamp","likes","replies","replyingTo","users","sarah_edo","name","avatarURL","tylermcginnis","dan_abramov","TweetBackend","Math","random","toString","substring","Promise","res","rej","setTimeout","hasLiked","authenticatedUser","hasOwnProperty","filter","uid","concat","generateUID","Date","now","formattedTweet","formatTweet","e","TweetService","all","getUsers","getTweets","then","info","saveLikeToggle","saveTweet","USERS_ACTION_TYPES","TWEETS_ACTION_TYPES","toggleTweet","type","handleToggleTweet","tweet","dispatch","catch","console","warn","alert","handleAddTweet","getState","showLoading","addTweet","hideLoading","AUTHENTICATED_USER_ACTION_TYPES","handleInitialData","getInitialData","receiveTweets","receiveUsers","TweetUtility","d","time","toLocaleTimeString","substr","slice","toLocaleDateString","authedUser","parentTweet","avatar","length","includes","parent","TweetsDetailComponent","handleLike","preventDefault","props","toParent","history","push","navigateToTweetPage","this","className","src","alt","formatDate","onClick","color","Component","withRouter","connect","TweetsListComponent","title","list","Fragment","map","tweetId","key","TweetsComposeComponent","state","toHome","handleChange","target","value","setState","handleSubmit","to","tweetLeft","onSubmit","placeholder","onChange","maxLength","disabled","TweetsPageComponent","match","params","sort","a","b","DashboardComponent","tweetIds","exact","path","render","component","Object","keys","LoadingComponent","Spinner","animation","role","FooterComponent","href","rel","NavbarComponent","isLoading","Navbar","Brand","logo","Nav","Link","as","NavLink","activeClassName","App","loadingBar","basename","default","Boolean","window","location","hostname","combineReducers","action","loadingBarReducer","logger","store","next","group","log","result","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5fcb6e41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export let tweets = {\r\n    \"8xf0y6ziyjabvozdd253nd\": {\r\n        id: \"8xf0y6ziyjabvozdd253nd\",\r\n        text: \"Shoutout to all the speakers I know for whom English is not a first language, but can STILL explain a concept well. It's hard enough to give a good talk in your mother tongue!\",\r\n        author: \"sarah_edo\",\r\n        timestamp: 1518122597860,\r\n        likes: ['tylermcginnis'],\r\n        replies: ['fap8sdxppna8oabnxljzcv', '3km0v4hf1ps92ajf4z2ytg'],\r\n        replyingTo: null,\r\n    },\r\n    \"5c9qojr2d1738zlx09afby\": {\r\n        id: \"5c9qojr2d1738zlx09afby\",\r\n        text: \"I hope one day the propTypes pendulum swings back. Such a simple yet effective API. Was one of my favorite parts of React.\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1518043995650,\r\n        likes: ['sarah_edo', 'dan_abramov'],\r\n        replies: ['njv20mq7jsxa6bgsqc97'],\r\n        replyingTo: null,\r\n    },\r\n    \"f4xzgapq7mu783k9t02ghx\": {\r\n        id: \"f4xzgapq7mu783k9t02ghx\",\r\n        text: \"Want to work at Facebook/Google/:BigCompany? Start contributing code long before you ever interview there.\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1517043995650,\r\n        likes: ['dan_abramov'],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"hbsc73kzqi75rg7v1e0i6a\": {\r\n        id: \"hbsc73kzqi75rg7v1e0i6a\",\r\n        text: \"Puppies 101: buy a hamper with a lid on it.\",\r\n        author: \"sarah_edo\",\r\n        timestamp: 1516043995650,\r\n        likes: ['tylermcginnis'],\r\n        replies: ['leqp4lzfox7cqvsgdj0e7', 'sfljgka8pfddbcer8nuxv'],\r\n        replyingTo: null,\r\n    },\r\n    \"5w6k1n34dkp1x29cuzn2zn\": {\r\n        id: \"5w6k1n34dkp1x29cuzn2zn\",\r\n        text: \"Is there a metric like code coverage, but that shows lines that, if changed (in a syntactically correct way), wouldn’t cause tests to fail?\",\r\n        author: \"dan_abramov\",\r\n        timestamp: 1515043995650,\r\n        likes: ['sarah_edo'],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"czpa59mg577x1oo45cup0d\": {\r\n        id: \"czpa59mg577x1oo45cup0d\",\r\n        text: \"React came out 'rethinking best practices'. It has since accumulated 'best practices' of its own. Let’s see if we can do better.\",\r\n        author: \"dan_abramov\",\r\n        timestamp: 1515043995650,\r\n        likes: ['tylermcginnis', 'sarah_edo'],\r\n        replies: ['3sklxkf9yyfowrf0o1ftbb'],\r\n        replyingTo: null,\r\n    },\r\n    \"2mb6re13q842wu8n106bhk\": {\r\n        id: \"2mb6re13q842wu8n106bhk\",\r\n        text: \"I think I realized I like dogs so much because I can really relate to being motivated by snacks\",\r\n        author: \"sarah_edo\",\r\n        timestamp: 1514043995650,\r\n        likes: ['dan_abramov'],\r\n        replies: ['26p5pskqi88i58qmza2gid'],\r\n        replyingTo: null,\r\n    },\r\n    \"nnvkjqoevs8t02lzcc0ky\": {\r\n        id: \"nnvkjqoevs8t02lzcc0ky\",\r\n        text: \"Maybe the real benefit of open source was the friendships we made along the way?\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1513043995650,\r\n        likes: [],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"omdbjl68fxact38hk7ypy6\": {\r\n        id: \"omdbjl68fxact38hk7ypy6\",\r\n        text: \"A 7-minute Paul Joseph Watson video being translated and aired by a Russian state TV channel is the most surreal thing I’ve seen in 2018 yet\",\r\n        author: \"dan_abramov\",\r\n        timestamp: 1512043995650,\r\n        likes: [],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"4pt0px8l0l9g6y69ylivti\": {\r\n        id: \"4pt0px8l0l9g6y69ylivti\",\r\n        text: \"Talking less about the downsides of OSS and focusing on some of the huge potential upsides for once might just help get more people into it.\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1511043995650,\r\n        likes: ['dan_abramov'],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"6h5ims9iks66d4m7kqizmv\": {\r\n        id: \"6h5ims9iks66d4m7kqizmv\",\r\n        text: \"By the way, if you have a blog post sitting around and want to get some eyes on it, we take guest submissions! That's how I started.\",\r\n        author: \"sarah_edo\",\r\n        timestamp: 1510043995650,\r\n        likes: ['dan_abramov', 'tylermcginnis'],\r\n        replies: ['xi3ca2jcfvpa0i3t4m7ag', 'r0xu2v1qrxa6ygtvf2rkjw'],\r\n        replyingTo: null,\r\n    },\r\n    \"fap8sdxppna8oabnxljzcv\": {\r\n        id: \"fap8sdxppna8oabnxljzcv\",\r\n        author: \"tylermcginnis\",\r\n        text: \"I agree. I'm always really impressed when I see someone giving a talk in a language that's not their own.\",\r\n        timestamp: 1518122677860,\r\n        likes: ['sarah_edo'],\r\n        replyingTo: \"8xf0y6ziyjabvozdd253nd\",\r\n        replies: [],\r\n    },\r\n    \"3km0v4hf1ps92ajf4z2ytg\": {\r\n        id: \"3km0v4hf1ps92ajf4z2ytg\",\r\n        author: \"dan_abramov\",\r\n        text: \"It can be difficult at times.\",\r\n        timestamp: 1518122667860,\r\n        likes: [],\r\n        replyingTo: \"8xf0y6ziyjabvozdd253nd\",\r\n        replies: [],\r\n    },\r\n    \"njv20mq7jsxa6bgsqc97\": {\r\n        id: \"njv20mq7jsxa6bgsqc97\",\r\n        author: \"dan_abramov\",\r\n        text: \"Sometimes you have to sacrifice simplicity for power.\",\r\n        timestamp: 1518044095650,\r\n        likes: ['tylermcginnis'],\r\n        replyingTo: \"5c9qojr2d1738zlx09afby\",\r\n        replies: [],\r\n    },\r\n    \"leqp4lzfox7cqvsgdj0e7\": {\r\n        id: \"leqp4lzfox7cqvsgdj0e7\",\r\n        author: \"tylermcginnis\",\r\n        text: \"Also trashcans. Learned this the hard way.\",\r\n        timestamp: 1516043255650,\r\n        likes: [],\r\n        replyingTo: \"hbsc73kzqi75rg7v1e0i6a\",\r\n        replies: [],\r\n    },\r\n    \"sfljgka8pfddbcer8nuxv\": {\r\n        id: \"sfljgka8pfddbcer8nuxv\",\r\n        author: \"dan_abramov\",\r\n        text: \"Puppies are the best.\",\r\n        timestamp: 1516045995650,\r\n        likes: ['sarah_edo', 'tylermcginnis'],\r\n        replyingTo: \"hbsc73kzqi75rg7v1e0i6a\",\r\n        replies: [],\r\n    },\r\n    \"3sklxkf9yyfowrf0o1ftbb\": {\r\n        id: \"3sklxkf9yyfowrf0o1ftbb\",\r\n        author: \"sarah_edo\",\r\n        text: \"The idea of best practices being a negative thing is an interesting concept.\",\r\n        timestamp: 1515044095650,\r\n        likes: ['dan_abramov'],\r\n        replyingTo: \"czpa59mg577x1oo45cup0d\",\r\n        replies: [],\r\n    },\r\n    \"26p5pskqi88i58qmza2gid\": {\r\n        id: \"26p5pskqi88i58qmza2gid\",\r\n        author: \"tylermcginnis\",\r\n        text: \"Too relatable\",\r\n        timestamp: 1514044994650,\r\n        likes: ['sarah_edo'],\r\n        replyingTo: \"2mb6re13q842wu8n106bhk\",\r\n        replies: [],\r\n    },\r\n    \"xi3ca2jcfvpa0i3t4m7ag\": {\r\n        id: \"xi3ca2jcfvpa0i3t4m7ag\",\r\n        author: \"tylermcginnis\",\r\n        text: \"Just DMd you!\",\r\n        timestamp: 1510043995650,\r\n        likes: [],\r\n        replyingTo: \"6h5ims9iks66d4m7kqizmv\",\r\n        replies: [],\r\n    },\r\n    \"r0xu2v1qrxa6ygtvf2rkjw\": {\r\n        id: \"r0xu2v1qrxa6ygtvf2rkjw\",\r\n        author: \"dan_abramov\",\r\n        text: \"This is a great idea.\",\r\n        timestamp: 1510044395650,\r\n        likes: ['tylermcginnis'],\r\n        replyingTo: \"6h5ims9iks66d4m7kqizmv\",\r\n        replies: [],\r\n    }\r\n};\r\n","export let users = {\r\n    sarah_edo: {\r\n        id: \"sarah_edo\",\r\n        name: \"Sarah Drasner\",\r\n        avatarURL: \"https://tylermcginnis.com/would-you-rather/sarah.jpg\",\r\n        tweets: ['8xf0y6ziyjabvozdd253nd', 'hbsc73kzqi75rg7v1e0i6a', '2mb6re13q842wu8n106bhk', '6h5ims9iks66d4m7kqizmv', '3sklxkf9yyfowrf0o1ftbb'],\r\n    },\r\n    tylermcginnis: {\r\n        id: \"tylermcginnis\",\r\n        name: \"Tyler McGinnis\",\r\n        avatarURL: \"https://tylermcginnis.com/would-you-rather/tyler.jpg\",\r\n        tweets: ['5c9qojr2d1738zlx09afby', 'f4xzgapq7mu783k9t02ghx', 'nnvkjqoevs8t02lzcc0ky', '4pt0px8l0l9g6y69ylivti', 'fap8sdxppna8oabnxljzcv', 'leqp4lzfox7cqvsgdj0e7', '26p5pskqi88i58qmza2gid', 'xi3ca2jcfvpa0i3t4m7ag'],\r\n    },\r\n    dan_abramov: {\r\n        id: \"dan_abramov\",\r\n        name: \"Dan Abramov\",\r\n        avatarURL: \"https://tylermcginnis.com/would-you-rather/dan.jpg\",\r\n        tweets: ['5w6k1n34dkp1x29cuzn2zn', 'czpa59mg577x1oo45cup0d', 'omdbjl68fxact38hk7ypy6', '3km0v4hf1ps92ajf4z2ytg', 'njv20mq7jsxa6bgsqc97', 'sfljgka8pfddbcer8nuxv', 'r0xu2v1qrxa6ygtvf2rkjw'],\r\n    }\r\n};\r\n","import {users, tweets} from \"./data\";\r\n\r\nexport class TweetBackend {\r\n\r\n    static generateUID() {\r\n        return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n    }\r\n\r\n    static getUsers() {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => res({...users}), 1000)\r\n        })\r\n    }\r\n\r\n    static getTweets() {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => res({...tweets}), 1000)\r\n        })\r\n    }\r\n\r\n    static saveLikeToggle({id, hasLiked, authenticatedUser}) {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => {\r\n                if (tweets && tweets.hasOwnProperty(id) && tweets[id].hasOwnProperty(\"likes\")) {\r\n                    tweets[id].likes = hasLiked === true\r\n                        ? tweets[id].likes.filter((uid) => uid !== authenticatedUser)\r\n                        : tweets[id].likes.concat([authenticatedUser]);\r\n                } else {\r\n                    rej()\r\n                }\r\n                res()\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n    static formatTweet({author, text, replyingTo = null}) {\r\n        return {\r\n            author,\r\n            id: TweetBackend.generateUID(),\r\n            likes: [],\r\n            replies: [],\r\n            text,\r\n            timestamp: Date.now(),\r\n            replyingTo,\r\n        }\r\n    }\r\n\r\n    static saveTweet({text, author, replyingTo}) {\r\n        return new Promise((res, rej) => {\r\n            const formattedTweet = TweetBackend.formatTweet({\r\n                text,\r\n                author,\r\n                replyingTo\r\n            });\r\n\r\n            setTimeout(() => {\r\n\r\n                try {\r\n                    tweets[formattedTweet.id] = formattedTweet;\r\n\r\n                    users[author] = {\r\n                        ...users[author],\r\n                        tweets: users[author].tweets.concat([formattedTweet.id])\r\n                    };\r\n                } catch (e) {\r\n                    rej();\r\n                }\r\n\r\n                res(formattedTweet)\r\n            }, 1000)\r\n        })\r\n    }\r\n\r\n}\r\n","import {TweetBackend} from \"../../backend/tweet/tweet.backend\";\r\n\r\nexport class TweetService {\r\n    static getInitialData() {\r\n        return Promise.all([\r\n            TweetBackend.getUsers(),\r\n            TweetBackend.getTweets(),\r\n        ]).then(([users, tweets]) => ({\r\n            users,\r\n            tweets,\r\n        }))\r\n    }\r\n\r\n    static saveLikeToggle(info) {\r\n        return TweetBackend.saveLikeToggle(info)\r\n    }\r\n\r\n    static saveTweet(info) {\r\n        return TweetBackend.saveTweet(info)\r\n    }\r\n\r\n}\r\n","export const USERS_ACTION_TYPES = {\r\n    RECEIVE_USERS: 'RECEIVE_USERS'\r\n\r\n};\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: USERS_ACTION_TYPES.RECEIVE_USERS,\r\n        users\r\n    }\r\n}\r\n","import {TweetService} from \"../services\";\r\nimport {hideLoading, showLoading} from \"react-redux-loading-bar\";\r\n\r\nexport const TWEETS_ACTION_TYPES = {\r\n    RECEIVE_TWEETS: 'RECEIVE_TWEETS',\r\n    TOGGLE_TWEET: 'TOGGLE_TWEET',\r\n    ADD_TWEET: 'ADD_TWEET'\r\n};\r\n\r\nexport function receiveTweets(tweets) {\r\n    return {\r\n        type: TWEETS_ACTION_TYPES.RECEIVE_TWEETS,\r\n        tweets\r\n    }\r\n}\r\n\r\nexport function toggleTweet({id, authenticatedUser, hasLiked}) {\r\n    return {\r\n        type: TWEETS_ACTION_TYPES.TOGGLE_TWEET,\r\n        id,\r\n        authenticatedUser,\r\n        hasLiked\r\n    }\r\n}\r\n\r\nexport function handleToggleTweet(tweet) {\r\n    return (dispatch) => {\r\n        dispatch(toggleTweet(tweet));\r\n\r\n        return TweetService.saveLikeToggle(tweet)\r\n            .catch((e) => {\r\n                console.warn('Error in handleToggleTweet: ', e);\r\n                dispatch(toggleTweet(tweet));\r\n                alert(\"There was an error linking the tweet. Try again!\")\r\n            });\r\n    }\r\n}\r\n\r\nexport function addTweet(tweet) {\r\n    return {\r\n        type: TWEETS_ACTION_TYPES.ADD_TWEET,\r\n        tweet\r\n    }\r\n}\r\n\r\nexport function handleAddTweet(text, replyingTo) {\r\n    return ((dispatch, getState) => {\r\n        const {authenticatedUser} = getState();\r\n\r\n        dispatch(showLoading());\r\n\r\n        return TweetService.saveTweet({\r\n            text,\r\n            author: authenticatedUser,\r\n            replyingTo\r\n        })\r\n            .then((tweet) => dispatch(addTweet(tweet)))\r\n            .then(() => dispatch(hideLoading()))\r\n    });\r\n}\r\n","export const AUTHENTICATED_USER_ACTION_TYPES = {\r\n    SET_AUTHENTICATED_USER: \"SET_AUTHENTICATED_USER\"\r\n};\r\n\r\nexport function setAuthenticatedUser(id) {\r\n    return {\r\n        type: AUTHENTICATED_USER_ACTION_TYPES.SET_AUTHENTICATED_USER,\r\n        id\r\n    }\r\n}\r\n","import {TweetService} from \"../services\";\r\nimport {receiveUsers} from \"./users.actions\";\r\nimport {receiveTweets} from \"./tweets.actions\";\r\nimport {setAuthenticatedUser} from \"./authenticatedUser.actions\";\r\nimport {hideLoading, showLoading} from \"react-redux-loading-bar\";\r\n\r\nconst AUTHENTICATED_USER_ID = 'sarah_edo';\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n        dispatch(showLoading());\r\n        return TweetService.getInitialData()\r\n            .then(({tweets, users}) => {\r\n                dispatch(receiveTweets(tweets));\r\n                dispatch(receiveUsers(users));\r\n                dispatch(setAuthenticatedUser(AUTHENTICATED_USER_ID));\r\n                dispatch(hideLoading());\r\n            })\r\n    }\r\n}\r\n","export class TweetUtility {\n\n    static formatDate(timestamp) {\n        const d = new Date(timestamp);\n        const time = d.toLocaleTimeString('en-US');\n        return time.substr(0, 5) + time.slice(-2) + ' | ' + d.toLocaleDateString();\n    }\n\n    static formatTweet(tweet, author, authedUser, parentTweet) {\n        const {id, likes, replies, text, timestamp} = tweet;\n        const {name, avatarURL} = author;\n\n        return {\n            name,\n            id,\n            timestamp,\n            text,\n            avatar: avatarURL,\n            likes: likes.length,\n            replies: replies.length,\n            hasLiked: likes.includes(authedUser),\n            parent: !parentTweet ? null : {\n                author: parentTweet.author,\n                id: parentTweet.id,\n            }\n        }\n    }\n}\n\n\n\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {TweetUtility} from \"../../../utils\";\r\nimport {TiArrowBackOutline} from 'react-icons/ti/index'\r\nimport {TiHeartOutline} from 'react-icons/ti/index'\r\nimport {TiHeartFullOutline} from 'react-icons/ti/index'\r\nimport {handleToggleTweet} from \"../../../actions/tweets.actions\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nclass TweetsDetailComponent extends Component {\r\n\r\n    handleLike = (e) => {\r\n        e.preventDefault();\r\n        const {dispatch, tweet, authenticatedUser} = this.props;\r\n        dispatch(handleToggleTweet({\r\n            id: tweet.id,\r\n            hasLiked: tweet.hasLiked,\r\n            authenticatedUser\r\n        }));\r\n    };\r\n\r\n    toParent = (e, id) => {\r\n        e.preventDefault();\r\n        this.props.history.push(`/tweet/${id}`);\r\n    };\r\n\r\n    navigateToTweetPage = (id) => {\r\n        this.props.history.push(`/tweet/${id}`);\r\n    };\r\n\r\n    render() {\r\n\r\n        const {tweet} = this.props;\r\n        const {name, avatar, timestamp, text, hasLiked, likes, replies, id, parent} = tweet;\r\n\r\n        return (\r\n            <div className='tweet'>\r\n                <img\r\n                    src={avatar}\r\n                    alt={`Avatar of ${name}`}\r\n                    className='avatar'\r\n                />\r\n                <div className='tweet-info'>\r\n                    <div>\r\n                        <span>{name}</span>\r\n                        <div>{TweetUtility.formatDate(timestamp)}</div>\r\n                        {parent && (\r\n                            <button className='replying-to' onClick={(e) => this.toParent(e, parent.id)}>\r\n                                Replying to @{parent.author}\r\n                            </button>\r\n                        )}\r\n                        <p>{text}</p>\r\n                    </div>\r\n                    <div className='tweet-icons'>\r\n                        <TiArrowBackOutline className='tweet-icon' onClick={() => {\r\n                            this.navigateToTweetPage(id)\r\n                        }}/>\r\n                        <span>{replies !== 0 && replies}</span>\r\n                        <button className='heart-button' onClick={this.handleLike}>\r\n                            {hasLiked === true\r\n                                ? <TiHeartFullOutline color='#e0245e' className='tweet-icon'/>\r\n                                : <TiHeartOutline className='tweet-icon'/>}\r\n                        </button>\r\n                        <span>{likes !== 0 && likes}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n// authenticatedUser, users, tweets come from store\r\n// id comes from prop\r\nfunction mapStateToProps({authenticatedUser, users, tweets}, {id}) {\r\n    const tweet = tweets[id];\r\n    const parentTweet = tweet ? tweets[tweet.replyingTo] : null;\r\n\r\n    return {\r\n        authenticatedUser,\r\n        tweet: tweet\r\n            ? TweetUtility.formatTweet(tweet, users[tweet.author], authenticatedUser, parentTweet)\r\n            : null\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(TweetsDetailComponent));\r\n","import React from 'react';\r\nimport TweetsDetailComponent from \"../detail/tweets.detail.component\";\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction TweetsListComponent(props) {\r\n\r\n    const {title, list} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {title && <h3 className=\"center\">{title}</h3>}\r\n            {list && list.length ?\r\n                list.map((tweetId) => (<TweetsDetailComponent key={tweetId} id={tweetId}/>)) :\r\n                <h3 className=\"center\">NO CONTENT</h3>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nTweetsListComponent.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    list: PropTypes.array.isRequired\r\n};\r\n\r\n\r\nexport default TweetsListComponent;\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {handleAddTweet} from \"../../../actions/tweets.actions\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass TweetsComposeComponent extends Component {\r\n\r\n    state = {\r\n        text: '',\r\n        toHome: false\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const text = e.target.value;\r\n        this.setState(() => ({\r\n            text,\r\n        }))\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {text} = this.state;\r\n\r\n        const {dispatch, id} = this.props;\r\n\r\n        dispatch(handleAddTweet(text, id));\r\n\r\n        this.setState(() => ({\r\n            text: '',\r\n            toHome: !id\r\n        }))\r\n    };\r\n\r\n\r\n    render() {\r\n        const {text, toHome} = this.state;\r\n\r\n        if (toHome) {\r\n            return <Redirect to=\"/\"/>\r\n        }\r\n\r\n        const tweetLeft = 280 - text.length;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h3 className='center'>Compose New Tweet</h3>\r\n                <form className='new-tweet' onSubmit={this.handleSubmit}>\r\n            <textarea\r\n                placeholder=\"What's happening?\"\r\n                value={text}\r\n                onChange={this.handleChange}\r\n                className='textarea'\r\n                maxLength={280}\r\n            />\r\n                    {tweetLeft <= 100 && (\r\n                        <div className='tweet-length'>\r\n                            {tweetLeft}\r\n                        </div>\r\n                    )}\r\n                    <button\r\n                        className='tweet-submit-button'\r\n                        type='submit'\r\n                        disabled={text\r\n                        === ''}>\r\n                        Submit\r\n                    </button>\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(TweetsComposeComponent);\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport TweetsDetailComponent from \"../detail/tweets.detail.component\";\r\nimport TweetsComposeComponent from \"../compose/tweets.compose.component\";\r\nimport TweetsListComponent from \"../list/tweets.list.component\";\r\n\r\nclass TweetsPageComponent extends Component {\r\n    render() {\r\n\r\n        const {id, replies} = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <TweetsDetailComponent id={id}/>\r\n                <TweetsComposeComponent id={id}/>\r\n                <TweetsListComponent list={replies} title=\"Replies\"/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({tweets}, {match}) {\r\n    const {id} = match.params;\r\n\r\n    return {\r\n        id,\r\n        replies: !tweets[id]\r\n            ? []\r\n            : tweets[id].replies.sort((a, b) => tweets[b].timestamp - tweets[a].timestamp)\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(TweetsPageComponent);\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Route} from \"react-router-dom\";\r\nimport TweetsListComponent from \"../../components/tweets/list/tweets.list.component\";\r\nimport TweetsComposeComponent from \"../../components/tweets/compose/tweets.compose.component\";\r\nimport TweetsPageComponent from \"../../components/tweets/page/tweetsPage.component\";\r\n\r\nclass DashboardComponent extends Component {\r\n\r\n    render() {\r\n        const {tweetIds} = this.props;\r\n        return (<div className=\"dashboard-view\">\r\n            <Route exact path='/' render={() => {\r\n                return (<TweetsListComponent title=\"Your Tweets\" list={tweetIds}/>)\r\n            }}>\r\n            </Route>\r\n            <Route path=\"/new\" component={TweetsComposeComponent}/>\r\n            <Route path='/tweet/:id' component={TweetsPageComponent}/>\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({tweets}) {\r\n    return {\r\n        tweetIds: Object.keys(tweets).sort((a, b) => tweets[b].timestamp - tweets[a].timestamp),\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DashboardComponent);\r\n","import React from 'react';\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nfunction LoadingComponent(props) {\r\n    return (\r\n        <div className=\"loading-area\">\r\n            <Spinner className=\"spinner\" animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LoadingComponent;\r\n","import React from 'react';\r\n\r\nfunction FooterComponent(props) {\r\n    return (\r\n        <span className=\"copy-right\">\r\n                    copyright © 2020 all rights reserved by\r\n                    <a href=\"https://www.seanroshan.com\" rel=\"noopener noreferrer\" target=\"_blank\"\r\n                          className=\"copy-right-link\">Sean Roshan</a>\r\n                </span>\r\n    );\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React from 'react';\r\nimport {Navbar, Nav} from \"react-bootstrap\";\r\n\r\nimport logo from \"../../styles/svg/logo.svg\";\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\nfunction NavbarComponent(props) {\r\n    const {isLoading} = props;\r\n    return (\r\n        <Navbar className=\"navbar navbar-dark\">\r\n            <Navbar.Brand>\r\n                <img\r\n                    alt=\"Chirper\"\r\n                    src={logo}\r\n                    className={isLoading ? \"navbar-brand-logo spin\" : \"navbar-brand-logo\"}\r\n                />\r\n                <Link className=\"navbar-link\" to=\"/\">Chirper</Link>\r\n            </Navbar.Brand>\r\n            <Nav>\r\n                <Nav.Link as={NavLink} to=\"/\" exact activeClassName='active'>Home</Nav.Link>\r\n                <Nav.Link as={NavLink} to=\"/new\" exact activeClassName='active'>New Tweet</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavbarComponent;\r\n","import React, {Component} from 'react';\nimport './styles/Application.scss';\nimport {connect} from \"react-redux\";\nimport {handleInitialData} from \"./actions/shared.actions\";\nimport DashboardComponent from \"./views/dashboard/dashboard.component\";\nimport LoadingComponent from \"./components/loading/loading.component\";\nimport FooterComponent from \"./components/footer/footer.component\";\nimport NavbarComponent from \"./components/navbar/navbar.component\";\nimport {HashRouter} from \"react-router-dom\";\nimport LoadingBar from \"react-redux-loading-bar\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.dispatch(handleInitialData())\n    }\n\n\n    render() {\n        const {authenticatedUser, loadingBar} = this.props;\n        return (\n            <div>\n                <HashRouter basename=\"/\">\n                    <div className=\"header\">\n                        <LoadingBar/>\n                        <NavbarComponent isLoading={loadingBar.default}/>\n                    </div>\n                    <div className=\"content\">\n                        {authenticatedUser !== null\n                            ? <DashboardComponent/>\n                            : loadingBar.default ? <LoadingComponent/> : <h3>Access Denied!</h3>}\n                    </div>\n                    <div className=\"footer\"><FooterComponent/></div>\n                </HashRouter>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps({authenticatedUser, loadingBar}) {\n    return {\n        authenticatedUser,\n        loadingBar\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport authenticatedUser from \"./authenticatedUser.reducer\";\r\nimport users from \"./users.reducer\";\r\nimport tweets from \"./tweets.reducer\";\r\nimport {loadingBarReducer} from \"react-redux-loading-bar\";\r\n\r\n\r\nexport default combineReducers({\r\n    authenticatedUser,\r\n    users,\r\n    tweets,\r\n    loadingBar: loadingBarReducer\r\n})\r\n","import {AUTHENTICATED_USER_ACTION_TYPES} from \"../actions/authenticatedUser.actions\";\r\n\r\n\r\nexport default function authenticatedUser(state = null, action) {\r\n    switch (action.type) {\r\n        case AUTHENTICATED_USER_ACTION_TYPES.SET_AUTHENTICATED_USER: {\r\n            return action.id\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {USERS_ACTION_TYPES} from \"../actions/users.actions\";\r\n\r\nexport default function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case USERS_ACTION_TYPES.RECEIVE_USERS: {\r\n            return {\r\n                ...state,\r\n                ...action.users\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {TWEETS_ACTION_TYPES} from \"../actions/tweets.actions\";\r\n\r\nexport default function tweets(state = {}, action) {\r\n    switch (action.type) {\r\n        case TWEETS_ACTION_TYPES.RECEIVE_TWEETS: {\r\n            return {\r\n                ...state,\r\n                ...action.tweets\r\n            }\r\n        }\r\n        case TWEETS_ACTION_TYPES.TOGGLE_TWEET: {\r\n            return {\r\n                ...state,\r\n                [action.id]: {\r\n                    ...state[action.id],\r\n                    likes: action.hasLiked === true\r\n                        ? state[action.id].likes.filter((uid) => uid !== action.authenticatedUser)\r\n                        : state[action.id].likes.concat(action.authenticatedUser)\r\n                }\r\n            }\r\n        }\r\n        case TWEETS_ACTION_TYPES.ADD_TWEET: {\r\n            const {tweet} = action;\r\n\r\n            let replyingTo = {};\r\n\r\n            if (tweet.replyingTo) {\r\n                replyingTo = {\r\n                    [tweet.replyingTo]: {\r\n                        ...state[tweet.replyingTo],\r\n                        replies: state[tweet.replyingTo].replies.concat([tweet.id])\r\n                    }\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                [action.tweet.id]: tweet,\r\n                ...replyingTo\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.log('The action: ', action);\r\n    const result = next(action);\r\n    console.log('The new state: ', store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n};\r\nexport default logger;\r\n","import thunk from \"redux-thunk\";\r\nimport logger from \"./logger.middleware\";\r\nimport {applyMiddleware} from \"redux\";\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport reducer from './reducers';\nimport middleware from './middlewares';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>,\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}