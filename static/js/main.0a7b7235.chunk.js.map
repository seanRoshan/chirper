{"version":3,"sources":["styles/svg/logo.svg","backend/tweet/data/tweets.js","backend/tweet/data/users.js","backend/tweet/tweet.backend.js","services/tweet/tweet.service.js","actions/users.actions.js","actions/tweets.actions.js","actions/authenticatedUser.actions.js","actions/shared.actions.js","components/tweets/list/tweets.list.component.js","views/dashboard/dashboard.component.js","components/loading/loading.component.js","components/footer/footer.component.js","components/navbar/navbar.component.js","App.js","serviceWorker.js","reducers/index.js","reducers/authenticatedUser.reducer.js","reducers/users.reducer.js","reducers/tweets.reducer.js","middlewares/logger.middleware.js","middlewares/index.js","index.js"],"names":["module","exports","tweets","id","text","author","timestamp","likes","replies","replyingTo","users","sarah_edo","name","avatarURL","tylermcginnis","dan_abramov","TweetBackend","Math","random","toString","substring","Promise","res","rej","setTimeout","hasLiked","authedUser","filter","uid","concat","generateUID","Date","now","formattedTweet","formatTweet","TweetService","all","getUsers","getTweets","then","info","saveLikeToggle","saveTweet","USERS_ACTION_TYPES","TWEETS_ACTION_TYPES","AUTHENTICATED_USER_ACTION_TYPES","handleInitialData","dispatch","getInitialData","type","receiveTweets","receiveUsers","TweetsListComponent","props","title","list","Fragment","length","map","tweetId","key","DashboardComponent","className","exact","path","render","tweetIds","Component","connect","Object","keys","sort","a","b","LoadingComponent","Spinner","animation","role","FooterComponent","href","target","NavbarComponent","Navbar","Brand","alt","src","logo","to","Nav","Link","App","this","basename","authenticatedUser","Boolean","window","location","hostname","match","combineReducers","state","action","logger","store","next","console","group","log","result","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,kC,yOCAhCC,EAAS,CAChB,yBAA0B,CACtBC,GAAI,yBACJC,KAAM,kLACNC,OAAQ,YACRC,UAAW,cACXC,MAAO,CAAC,iBACRC,QAAS,CAAC,yBAA0B,0BACpCC,WAAY,MAEhB,yBAA0B,CACtBN,GAAI,yBACJC,KAAM,6HACNC,OAAQ,gBACRC,UAAW,cACXC,MAAO,CAAC,YAAa,eACrBC,QAAS,CAAC,wBACVC,WAAY,MAEhB,uBAA0B,CACtBN,GAAI,yBACJC,KAAM,6GACNC,OAAQ,gBACRC,UAAW,cACXC,MAAO,CAAC,eACRC,QAAS,GACTC,WAAY,MAEhB,uBAA0B,CACtBN,GAAI,yBACJC,KAAM,8CACNC,OAAQ,YACRC,UAAW,cACXC,MAAO,CAAC,iBACRC,QAAS,CAAC,wBAAyB,yBACnCC,WAAY,MAEhB,yBAA0B,CACtBN,GAAI,yBACJC,KAAM,mJACNC,OAAQ,cACRC,UAAW,cACXC,MAAO,CAAC,aACRC,QAAS,GACTC,WAAY,MAEhB,uBAA0B,CACtBN,GAAI,yBACJC,KAAM,wIACNC,OAAQ,cACRC,UAAW,cACXC,MAAO,CAAC,gBAAiB,aACzBC,QAAS,CAAC,0BACVC,WAAY,MAEhB,yBAA0B,CACtBN,GAAI,yBACJC,KAAM,kGACNC,OAAQ,YACRC,UAAW,cACXC,MAAO,CAAC,eACRC,QAAS,CAAC,0BACVC,WAAY,MAEhB,sBAAyB,CACrBN,GAAI,wBACJC,KAAM,mFACNC,OAAQ,gBACRC,UAAW,cACXC,MAAO,GACPC,QAAS,GACTC,WAAY,MAEhB,uBAA0B,CACtBN,GAAI,yBACJC,KAAM,oJACNC,OAAQ,cACRC,UAAW,cACXC,MAAO,GACPC,QAAS,GACTC,WAAY,MAEhB,yBAA0B,CACtBN,GAAI,yBACJC,KAAM,+IACNC,OAAQ,gBACRC,UAAW,cACXC,MAAO,CAAC,eACRC,QAAS,GACTC,WAAY,MAEhB,yBAA0B,CACtBN,GAAI,yBACJC,KAAM,uIACNC,OAAQ,YACRC,UAAW,cACXC,MAAO,CAAC,cAAe,iBACvBC,QAAS,CAAC,wBAAyB,0BACnCC,WAAY,MAEhB,uBAA0B,CACtBN,GAAI,yBACJE,OAAQ,gBACRD,KAAM,4GACNE,UAAW,cACXC,MAAO,CAAC,aACRE,WAAY,yBACZD,QAAS,IAEb,yBAA0B,CACtBL,GAAI,yBACJE,OAAQ,cACRD,KAAM,gCACNE,UAAW,cACXC,MAAO,GACPE,WAAY,yBACZD,QAAS,IAEb,qBAAwB,CACpBL,GAAI,uBACJE,OAAQ,cACRD,KAAM,wDACNE,UAAW,cACXC,MAAO,CAAC,iBACRE,WAAY,yBACZD,QAAS,IAEb,sBAAyB,CACrBL,GAAI,wBACJE,OAAQ,gBACRD,KAAM,6CACNE,UAAW,cACXC,MAAO,GACPE,WAAY,yBACZD,QAAS,IAEb,sBAAyB,CACrBL,GAAI,wBACJE,OAAQ,cACRD,KAAM,wBACNE,UAAW,cACXC,MAAO,CAAC,YAAa,iBACrBE,WAAY,yBACZD,QAAS,IAEb,yBAA0B,CACtBL,GAAI,yBACJE,OAAQ,YACRD,KAAM,+EACNE,UAAW,cACXC,MAAO,CAAC,eACRE,WAAY,yBACZD,QAAS,IAEb,yBAA0B,CACtBL,GAAI,yBACJE,OAAQ,gBACRD,KAAM,gBACNE,UAAW,cACXC,MAAO,CAAC,aACRE,WAAY,yBACZD,QAAS,IAEb,sBAAyB,CACrBL,GAAI,wBACJE,OAAQ,gBACRD,KAAM,gBACNE,UAAW,cACXC,MAAO,GACPE,WAAY,yBACZD,QAAS,IAEb,uBAA0B,CACtBL,GAAI,yBACJE,OAAQ,cACRD,KAAM,wBACNE,UAAW,cACXC,MAAO,CAAC,iBACRE,WAAY,yBACZD,QAAS,KCnLNE,EAAQ,CACfC,UAAW,CACPR,GAAI,YACJS,KAAM,gBACNC,UAAW,uDACXX,OAAQ,CAAC,yBAA0B,yBAA0B,yBAA0B,yBAA0B,2BAErHY,cAAe,CACXX,GAAI,gBACJS,KAAM,iBACNC,UAAW,uDACXX,OAAQ,CAAC,yBAA0B,yBAA0B,wBAAyB,yBAA0B,yBAA0B,wBAAyB,yBAA0B,0BAEjMa,YAAa,CACTZ,GAAI,cACJS,KAAM,cACNC,UAAW,qDACXX,OAAQ,CAAC,yBAA0B,yBAA0B,yBAA0B,yBAA0B,uBAAwB,wBAAyB,4BCf7Jc,EAAb,2GAGQ,OAAOC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,IAAMH,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,MAHrG,iCAOQ,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACrBC,YAAW,kBAAMF,EAAI,eAAIZ,MAAS,UAR9C,kCAaQ,OAAO,IAAIW,SAAQ,SAACC,EAAKC,GACrBC,YAAW,kBAAMF,EAAI,eAAIpB,MAAU,UAd/C,wCAkBuD,IAA5BC,EAA2B,EAA3BA,GAAIsB,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,WACjC,OAAO,IAAIL,SAAQ,SAACC,EAAKC,GACrBC,YAAW,WACPtB,OAAM,eACCA,EADD,eAEDC,EAFC,eAGKD,EAAOC,GAHZ,CAIEI,OAAoB,IAAbkB,EACDvB,EAAOC,GAAII,MAAMoB,QAAO,SAACC,GAAD,OAASA,IAAQF,KACzCxB,EAAOC,GAAII,MAAMsB,OAAO,CAACH,QAGvCJ,MACD,UA/Bf,qCAmC2D,IAAnCjB,EAAkC,EAAlCA,OAAQD,EAA0B,EAA1BA,KAA0B,IAApBK,kBAAoB,MAAP,KAAO,EAClD,MAAO,CACHJ,SACAF,GAAIa,EAAac,cACjBvB,MAAO,GACPC,QAAS,GACTJ,OACAE,UAAWyB,KAAKC,MAChBvB,gBA3CZ,mCA+CkD,IAA5BL,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,OAAQI,EAAa,EAAbA,WAC5B,OAAO,IAAIY,SAAQ,SAACC,EAAKC,GACrB,IAAMU,EAAiBjB,EAAakB,YAAY,CAC5C9B,OACAC,SACAI,eAGJe,YAAW,WACPtB,OAAM,eACCA,EADD,eAED+B,EAAe9B,GAAK8B,IAGzBvB,MAAK,eACEA,EADF,eAEAL,EAFA,eAGMK,EAAML,GAHZ,CAIGH,OAAQQ,EAAML,GAAQH,OAAO2B,OAAO,CAACI,EAAe9B,SAI5DmB,EAAIW,KACL,YAtEf,KCAaE,EAAb,8GAEQ,OAAOd,QAAQe,IAAI,CACfpB,EAAaqB,WACbrB,EAAasB,cACdC,MAAK,yCAAsB,CAC1B7B,MADI,KAEJR,OAFI,WALhB,sCAW2BsC,GACnB,OAAOxB,EAAayB,eAAeD,KAZ3C,gCAeqBA,GACb,OAAOxB,EAAa0B,UAAUF,OAhBtC,KCFaG,EACM,gBCDZ,IAAMC,EACO,iBCDb,IAAMC,EACe,yBCMrB,SAASC,IACZ,OAAO,SAACC,GACJ,OAAOZ,EAAaa,iBACfT,MAAK,YAAsB,IAApBrC,EAAmB,EAAnBA,OAAQQ,EAAW,EAAXA,MACZqC,EFNT,SAAuB7C,GAC1B,MAAO,CACH+C,KAAML,EACN1C,UEGiBgD,CAAchD,IACvB6C,EHPT,SAAsBrC,GACzB,MAAO,CACHuC,KAAMN,EACNjC,SGIiByC,CAAazC,IACtBqC,EDRL,CACHE,KAAMJ,EACN1C,GCFsB,kB,YCYfiD,MAff,SAA6BC,GAAQ,IAE1BC,EAAeD,EAAfC,MAAOC,EAAQF,EAARE,KAEd,OACI,kBAAC,IAAMC,SAAP,KACKF,GAAS,4BAAKA,GACdC,GAAQA,EAAKE,OACVF,EAAKG,KAAI,SAACC,GAAD,OAAc,wBAAIC,IAAKD,GAAUA,MAC1C,4CCNVE,E,uKAEQ,IAAD,OACL,OAAQ,yBAAKC,UAAU,kBACnB,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,WAC1B,OAAQ,kBAAC,EAAD,CAAqBX,MAAM,cAAcC,KAAM,EAAKF,MAAMa,cAGtE,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,OAAOC,OAAQ,WAC7B,OAAQ,wBAAIH,UAAU,UAAd,qB,GATSK,aAqBlBC,mBAJf,YAAoC,IAAVlE,EAAS,EAATA,OACtB,MAAO,CAACgE,SAAUG,OAAOC,KAAKpE,GAAQqE,MAAK,SAACC,EAAGC,GAAJ,OAAUvE,EAAOuE,GAAGnE,UAAYJ,EAAOsE,GAAGlE,gBAG1E8D,CAAyBP,G,QCZzBa,MAXf,SAA0BrB,GACtB,OACI,yBAAKS,UAAU,gBACX,kBAACa,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC7B,0BAAMf,UAAU,WAAhB,iB,OCMDgB,MAVf,SAAyBzB,GACrB,OACI,0BAAMS,UAAU,cAAhB,6CAEY,kBAAC,IAAD,CAAMiB,KAAK,6BAA6BC,OAAO,SACzClB,UAAU,mBADhB,iB,iCCkBLmB,MAnBf,SAAyB5B,GACrB,OACI,kBAAC6B,EAAA,EAAD,CAAQpB,UAAU,sBACd,kBAACoB,EAAA,EAAOC,MAAR,KACI,yBACIC,IAAI,UACJC,IAAKC,IACLxB,UAAU,sBAEd,kBAAC,IAAD,CAAMA,UAAU,cAAcyB,GAAG,KAAjC,YAEJ,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAIC,KAAL,KAAU,kBAAC,IAAD,CAAM3B,UAAU,cAAcyB,GAAG,KAAjC,SACV,kBAACC,EAAA,EAAIC,KAAL,KAAU,kBAAC,IAAD,CAAM3B,UAAU,cAAcyB,GAAG,QAAjC,iBCTpBG,E,kLAGEC,KAAKtC,MAAMN,SAASD,O,+BAIpB,OACI,6BACI,kBAAC,IAAD,CAAY8C,SAAS,KACjB,yBAAK9B,UAAU,UAAS,kBAAC,EAAD,OACxB,yBAAKA,UAAU,WACuB,OAAjC6B,KAAKtC,MAAMwC,kBAA6B,kBAAC,EAAD,MAAwB,kBAAC,EAAD,OAErE,yBAAK/B,UAAU,UAAS,kBAAC,EAAD,a,GAd1BK,aA4BHC,mBANf,YACI,MAAO,CACHyB,kBAFsC,EAApBA,qBAMXzB,CAAyBsB,GC1BpBI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCbSC,kBAAgB,CAC3BN,kBCHW,WAAkD,IAAvBO,EAAsB,uDAAd,KAAMC,EAAQ,uCAC5D,OAAQA,EAAOpD,MACX,KAAKJ,EACD,OAAOwD,EAAOlG,GAElB,QACI,OAAOiG,IDFf1F,MELW,WAAoC,IAArB0F,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC9C,OAAQA,EAAOpD,MACX,KAAKN,EACD,OAAO,eACAyD,EADP,GAEOC,EAAO3F,OAGlB,QACI,OAAO0F,IFHflG,OGNW,WAAqC,IAArBkG,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC/C,OAAQA,EAAOpD,MACX,KAAKL,EACD,OAAO,eACAwD,EADP,GAEOC,EAAOnG,QAGlB,QACI,OAAOkG,M,QCHJE,EARA,SAACC,GAAD,OAAW,SAACC,GAAD,OAAU,SAACH,GACjCI,QAAQC,MAAML,EAAOpD,MACrBwD,QAAQE,IAAI,eAAgBN,GAC5B,IAAMO,EAASJ,EAAKH,GAGpB,OAFAI,QAAQE,IAAI,kBAAmBJ,EAAMM,YACrCJ,QAAQK,WACDF,KCFIG,cACXC,IACAV,GCKEC,EAAQU,YAAYC,EAASC,GAEnCC,IAASnD,OACL,kBAAC,IAAD,CAAUsC,MAAOA,GACb,kBAAC,IAAD,KACI,kBAAC,EAAD,OAFR,KAKAc,SAASC,eAAe,SPgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlF,MAAK,SAAAmF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLpB,QAAQoB,MAAMA,EAAMC,c","file":"static/js/main.0a7b7235.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export let tweets = {\r\n    \"8xf0y6ziyjabvozdd253nd\": {\r\n        id: \"8xf0y6ziyjabvozdd253nd\",\r\n        text: \"Shoutout to all the speakers I know for whom English is not a first language, but can STILL explain a concept well. It's hard enough to give a good talk in your mother tongue!\",\r\n        author: \"sarah_edo\",\r\n        timestamp: 1518122597860,\r\n        likes: ['tylermcginnis'],\r\n        replies: ['fap8sdxppna8oabnxljzcv', '3km0v4hf1ps92ajf4z2ytg'],\r\n        replyingTo: null,\r\n    },\r\n    \"5c9qojr2d1738zlx09afby\": {\r\n        id: \"5c9qojr2d1738zlx09afby\",\r\n        text: \"I hope one day the propTypes pendulum swings back. Such a simple yet effective API. Was one of my favorite parts of React.\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1518043995650,\r\n        likes: ['sarah_edo', 'dan_abramov'],\r\n        replies: ['njv20mq7jsxa6bgsqc97'],\r\n        replyingTo: null,\r\n    },\r\n    \"f4xzgapq7mu783k9t02ghx\": {\r\n        id: \"f4xzgapq7mu783k9t02ghx\",\r\n        text: \"Want to work at Facebook/Google/:BigCompany? Start contributing code long before you ever interview there.\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1517043995650,\r\n        likes: ['dan_abramov'],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"hbsc73kzqi75rg7v1e0i6a\": {\r\n        id: \"hbsc73kzqi75rg7v1e0i6a\",\r\n        text: \"Puppies 101: buy a hamper with a lid on it.\",\r\n        author: \"sarah_edo\",\r\n        timestamp: 1516043995650,\r\n        likes: ['tylermcginnis'],\r\n        replies: ['leqp4lzfox7cqvsgdj0e7', 'sfljgka8pfddbcer8nuxv'],\r\n        replyingTo: null,\r\n    },\r\n    \"5w6k1n34dkp1x29cuzn2zn\": {\r\n        id: \"5w6k1n34dkp1x29cuzn2zn\",\r\n        text: \"Is there a metric like code coverage, but that shows lines that, if changed (in a syntactically correct way), wouldn’t cause tests to fail?\",\r\n        author: \"dan_abramov\",\r\n        timestamp: 1515043995650,\r\n        likes: ['sarah_edo'],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"czpa59mg577x1oo45cup0d\": {\r\n        id: \"czpa59mg577x1oo45cup0d\",\r\n        text: \"React came out 'rethinking best practices'. It has since accumulated 'best practices' of its own. Let’s see if we can do better.\",\r\n        author: \"dan_abramov\",\r\n        timestamp: 1515043995650,\r\n        likes: ['tylermcginnis', 'sarah_edo'],\r\n        replies: ['3sklxkf9yyfowrf0o1ftbb'],\r\n        replyingTo: null,\r\n    },\r\n    \"2mb6re13q842wu8n106bhk\": {\r\n        id: \"2mb6re13q842wu8n106bhk\",\r\n        text: \"I think I realized I like dogs so much because I can really relate to being motivated by snacks\",\r\n        author: \"sarah_edo\",\r\n        timestamp: 1514043995650,\r\n        likes: ['dan_abramov'],\r\n        replies: ['26p5pskqi88i58qmza2gid'],\r\n        replyingTo: null,\r\n    },\r\n    \"nnvkjqoevs8t02lzcc0ky\": {\r\n        id: \"nnvkjqoevs8t02lzcc0ky\",\r\n        text: \"Maybe the real benefit of open source was the friendships we made along the way?\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1513043995650,\r\n        likes: [],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"omdbjl68fxact38hk7ypy6\": {\r\n        id: \"omdbjl68fxact38hk7ypy6\",\r\n        text: \"A 7-minute Paul Joseph Watson video being translated and aired by a Russian state TV channel is the most surreal thing I’ve seen in 2018 yet\",\r\n        author: \"dan_abramov\",\r\n        timestamp: 1512043995650,\r\n        likes: [],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"4pt0px8l0l9g6y69ylivti\": {\r\n        id: \"4pt0px8l0l9g6y69ylivti\",\r\n        text: \"Talking less about the downsides of OSS and focusing on some of the huge potential upsides for once might just help get more people into it.\",\r\n        author: \"tylermcginnis\",\r\n        timestamp: 1511043995650,\r\n        likes: ['dan_abramov'],\r\n        replies: [],\r\n        replyingTo: null,\r\n    },\r\n    \"6h5ims9iks66d4m7kqizmv\": {\r\n        id: \"6h5ims9iks66d4m7kqizmv\",\r\n        text: \"By the way, if you have a blog post sitting around and want to get some eyes on it, we take guest submissions! That's how I started.\",\r\n        author: \"sarah_edo\",\r\n        timestamp: 1510043995650,\r\n        likes: ['dan_abramov', 'tylermcginnis'],\r\n        replies: ['xi3ca2jcfvpa0i3t4m7ag', 'r0xu2v1qrxa6ygtvf2rkjw'],\r\n        replyingTo: null,\r\n    },\r\n    \"fap8sdxppna8oabnxljzcv\": {\r\n        id: \"fap8sdxppna8oabnxljzcv\",\r\n        author: \"tylermcginnis\",\r\n        text: \"I agree. I'm always really impressed when I see someone giving a talk in a language that's not their own.\",\r\n        timestamp: 1518122677860,\r\n        likes: ['sarah_edo'],\r\n        replyingTo: \"8xf0y6ziyjabvozdd253nd\",\r\n        replies: [],\r\n    },\r\n    \"3km0v4hf1ps92ajf4z2ytg\": {\r\n        id: \"3km0v4hf1ps92ajf4z2ytg\",\r\n        author: \"dan_abramov\",\r\n        text: \"It can be difficult at times.\",\r\n        timestamp: 1518122667860,\r\n        likes: [],\r\n        replyingTo: \"8xf0y6ziyjabvozdd253nd\",\r\n        replies: [],\r\n    },\r\n    \"njv20mq7jsxa6bgsqc97\": {\r\n        id: \"njv20mq7jsxa6bgsqc97\",\r\n        author: \"dan_abramov\",\r\n        text: \"Sometimes you have to sacrifice simplicity for power.\",\r\n        timestamp: 1518044095650,\r\n        likes: ['tylermcginnis'],\r\n        replyingTo: \"5c9qojr2d1738zlx09afby\",\r\n        replies: [],\r\n    },\r\n    \"leqp4lzfox7cqvsgdj0e7\": {\r\n        id: \"leqp4lzfox7cqvsgdj0e7\",\r\n        author: \"tylermcginnis\",\r\n        text: \"Also trashcans. Learned this the hard way.\",\r\n        timestamp: 1516043255650,\r\n        likes: [],\r\n        replyingTo: \"hbsc73kzqi75rg7v1e0i6a\",\r\n        replies: [],\r\n    },\r\n    \"sfljgka8pfddbcer8nuxv\": {\r\n        id: \"sfljgka8pfddbcer8nuxv\",\r\n        author: \"dan_abramov\",\r\n        text: \"Puppies are the best.\",\r\n        timestamp: 1516045995650,\r\n        likes: ['sarah_edo', 'tylermcginnis'],\r\n        replyingTo: \"hbsc73kzqi75rg7v1e0i6a\",\r\n        replies: [],\r\n    },\r\n    \"3sklxkf9yyfowrf0o1ftbb\": {\r\n        id: \"3sklxkf9yyfowrf0o1ftbb\",\r\n        author: \"sarah_edo\",\r\n        text: \"The idea of best practices being a negative thing is an interesting concept.\",\r\n        timestamp: 1515044095650,\r\n        likes: ['dan_abramov'],\r\n        replyingTo: \"czpa59mg577x1oo45cup0d\",\r\n        replies: [],\r\n    },\r\n    \"26p5pskqi88i58qmza2gid\": {\r\n        id: \"26p5pskqi88i58qmza2gid\",\r\n        author: \"tylermcginnis\",\r\n        text: \"Too relatable\",\r\n        timestamp: 1514044994650,\r\n        likes: ['sarah_edo'],\r\n        replyingTo: \"2mb6re13q842wu8n106bhk\",\r\n        replies: [],\r\n    },\r\n    \"xi3ca2jcfvpa0i3t4m7ag\": {\r\n        id: \"xi3ca2jcfvpa0i3t4m7ag\",\r\n        author: \"tylermcginnis\",\r\n        text: \"Just DMd you!\",\r\n        timestamp: 1510043995650,\r\n        likes: [],\r\n        replyingTo: \"6h5ims9iks66d4m7kqizmv\",\r\n        replies: [],\r\n    },\r\n    \"r0xu2v1qrxa6ygtvf2rkjw\": {\r\n        id: \"r0xu2v1qrxa6ygtvf2rkjw\",\r\n        author: \"dan_abramov\",\r\n        text: \"This is a great idea.\",\r\n        timestamp: 1510044395650,\r\n        likes: ['tylermcginnis'],\r\n        replyingTo: \"6h5ims9iks66d4m7kqizmv\",\r\n        replies: [],\r\n    }\r\n};\r\n","export let users = {\r\n    sarah_edo: {\r\n        id: \"sarah_edo\",\r\n        name: \"Sarah Drasner\",\r\n        avatarURL: \"https://tylermcginnis.com/would-you-rather/sarah.jpg\",\r\n        tweets: ['8xf0y6ziyjabvozdd253nd', 'hbsc73kzqi75rg7v1e0i6a', '2mb6re13q842wu8n106bhk', '6h5ims9iks66d4m7kqizmv', '3sklxkf9yyfowrf0o1ftbb'],\r\n    },\r\n    tylermcginnis: {\r\n        id: \"tylermcginnis\",\r\n        name: \"Tyler McGinnis\",\r\n        avatarURL: \"https://tylermcginnis.com/would-you-rather/tyler.jpg\",\r\n        tweets: ['5c9qojr2d1738zlx09afby', 'f4xzgapq7mu783k9t02ghx', 'nnvkjqoevs8t02lzcc0ky', '4pt0px8l0l9g6y69ylivti', 'fap8sdxppna8oabnxljzcv', 'leqp4lzfox7cqvsgdj0e7', '26p5pskqi88i58qmza2gid', 'xi3ca2jcfvpa0i3t4m7ag'],\r\n    },\r\n    dan_abramov: {\r\n        id: \"dan_abramov\",\r\n        name: \"Dan Abramov\",\r\n        avatarURL: \"https://tylermcginnis.com/would-you-rather/dan.jpg\",\r\n        tweets: ['5w6k1n34dkp1x29cuzn2zn', 'czpa59mg577x1oo45cup0d', 'omdbjl68fxact38hk7ypy6', '3km0v4hf1ps92ajf4z2ytg', 'njv20mq7jsxa6bgsqc97', 'sfljgka8pfddbcer8nuxv', 'r0xu2v1qrxa6ygtvf2rkjw'],\r\n    }\r\n};\r\n","import {users, tweets} from \"./data\";\r\n\r\nexport class TweetBackend {\r\n\r\n    static generateUID() {\r\n        return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\r\n    }\r\n\r\n    static getUsers() {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => res({...users}), 1000)\r\n        })\r\n    }\r\n\r\n    static getTweets() {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => res({...tweets}), 1000)\r\n        })\r\n    }\r\n\r\n    static saveLikeToggle({id, hasLiked, authedUser}) {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => {\r\n                tweets = {\r\n                    ...tweets,\r\n                    [id]: {\r\n                        ...tweets[id],\r\n                        likes: hasLiked === true\r\n                            ? tweets[id].likes.filter((uid) => uid !== authedUser)\r\n                            : tweets[id].likes.concat([authedUser])\r\n                    }\r\n                };\r\n                res()\r\n            }, 500)\r\n        })\r\n    }\r\n\r\n    static formatTweet({author, text, replyingTo = null}) {\r\n        return {\r\n            author,\r\n            id: TweetBackend.generateUID(),\r\n            likes: [],\r\n            replies: [],\r\n            text,\r\n            timestamp: Date.now(),\r\n            replyingTo,\r\n        }\r\n    }\r\n\r\n    static saveTweet({text, author, replyingTo}) {\r\n        return new Promise((res, rej) => {\r\n            const formattedTweet = TweetBackend.formatTweet({\r\n                text,\r\n                author,\r\n                replyingTo\r\n            });\r\n\r\n            setTimeout(() => {\r\n                tweets = {\r\n                    ...tweets,\r\n                    [formattedTweet.id]: formattedTweet,\r\n                };\r\n\r\n                users = {\r\n                    ...users,\r\n                    [author]: {\r\n                        ...users[author],\r\n                        tweets: users[author].tweets.concat([formattedTweet.id])\r\n                    }\r\n                };\r\n\r\n                res(formattedTweet)\r\n            }, 1000)\r\n        })\r\n    }\r\n\r\n}\r\n","import {TweetBackend} from \"../../backend/tweet/tweet.backend\";\r\n\r\nexport class TweetService {\r\n    static getInitialData() {\r\n        return Promise.all([\r\n            TweetBackend.getUsers(),\r\n            TweetBackend.getTweets(),\r\n        ]).then(([users, tweets]) => ({\r\n            users,\r\n            tweets,\r\n        }))\r\n    }\r\n\r\n    static _saveLikeToggle(info) {\r\n        return TweetBackend.saveLikeToggle(info)\r\n    }\r\n\r\n    static saveTweet(info) {\r\n        return TweetBackend.saveTweet(info)\r\n    }\r\n\r\n}\r\n","export const USERS_ACTION_TYPES = {\r\n    RECEIVE_USERS: 'RECEIVE_USERS'\r\n\r\n};\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: USERS_ACTION_TYPES.RECEIVE_USERS,\r\n        users\r\n    }\r\n}\r\n","export const TWEETS_ACTION_TYPES = {\r\n    RECEIVE_TWEETS: 'RECEIVE_TWEETS'\r\n    \r\n};\r\n\r\nexport function receiveTweets(tweets) {\r\n    return {\r\n        type: TWEETS_ACTION_TYPES.RECEIVE_TWEETS,\r\n        tweets\r\n    }\r\n}\r\n","export const AUTHENTICATED_USER_ACTION_TYPES = {\r\n    SET_AUTHENTICATED_USER: \"SET_AUTHENTICATED_USER\"\r\n};\r\n\r\nexport function setAuthenticatedUser(id) {\r\n    return {\r\n        type: AUTHENTICATED_USER_ACTION_TYPES.SET_AUTHENTICATED_USER,\r\n        id\r\n    }\r\n}\r\n","import {TweetService} from \"../services\";\r\nimport {receiveUsers} from \"./users.actions\";\r\nimport {receiveTweets} from \"./tweets.actions\";\r\nimport {setAuthenticatedUser} from \"./authenticatedUser.actions\";\r\n\r\nconst AUTHENTICATED_USER_ID = 'sarah_edo';\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n        return TweetService.getInitialData()\r\n            .then(({tweets, users}) => {\r\n                dispatch(receiveTweets(tweets));\r\n                dispatch(receiveUsers(users));\r\n                dispatch(setAuthenticatedUser(AUTHENTICATED_USER_ID))\r\n            })\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nfunction TweetsListComponent(props) {\r\n\r\n    const {title, list} = props;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {title && <h3>{title}</h3>}\r\n            {list && list.length ?\r\n                list.map((tweetId) => (<li key={tweetId}>{tweetId}</li>)) :\r\n                <h3>NO CONTENT</h3>\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TweetsListComponent;\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {HashRouter, Route} from \"react-router-dom\";\r\nimport TweetsListComponent from \"../../components/tweets/list/tweets.list.component\";\r\n\r\nclass DashboardComponent extends Component {\r\n\r\n    render() {\r\n        return (<div className=\"dashboard-view\">\r\n            <Route exact path='/' render={() => {\r\n                return (<TweetsListComponent title=\"YOUR TWEETS\" list={this.props.tweetIds}/>)\r\n            }}>\r\n            </Route>\r\n            <Route exact path='/new' render={() => {\r\n                return (<h3 className=\"center\">NEW TWEET</h3>)\r\n            }}>\r\n            </Route>\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({tweets}) {\r\n    return {tweetIds: Object.keys(tweets).sort((a, b) => tweets[b].timestamp - tweets[a].timestamp)};\r\n}\r\n\r\nexport default connect(mapStateToProps)(DashboardComponent);\r\n","import React from 'react';\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nfunction LoadingComponent(props) {\r\n    return (\r\n        <div className=\"loading-area\">\r\n            <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default LoadingComponent;\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction FooterComponent(props) {\r\n    return (\r\n        <span className=\"copy-right\">\r\n                    copyright © 2020 all rights reserved by\r\n                    <Link href=\"https://www.seanroshan.com\" target=\"_blank\"\r\n                          className=\"copy-right-link\">Sean Roshan</Link>\r\n                </span>\r\n    );\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React from 'react';\r\nimport {Navbar, Nav} from \"react-bootstrap\";\r\n\r\nimport logo from \"../../styles/svg/logo.svg\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction NavbarComponent(props) {\r\n    return (\r\n        <Navbar className=\"navbar navbar-dark\" >\r\n            <Navbar.Brand>\r\n                <img\r\n                    alt=\"Chirper\"\r\n                    src={logo}\r\n                    className=\"navbar-brand-logo\"\r\n                />\r\n                <Link className=\"navbar-link\" to=\"/\">Chirper</Link>\r\n            </Navbar.Brand>\r\n            <Nav>\r\n                <Nav.Link><Link className=\"navbar-link\" to=\"/\">Home</Link></Nav.Link>\r\n                <Nav.Link><Link className=\"navbar-link\" to=\"/new\">New Tweet</Link></Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default NavbarComponent;\r\n","import React, {Component} from 'react';\nimport './styles/Application.scss';\nimport {connect} from \"react-redux\";\nimport {handleInitialData} from \"./actions/shared.actions\";\nimport DashboardComponent from \"./views/dashboard/dashboard.component\";\nimport LoadingComponent from \"./components/loading/loading.component\";\nimport FooterComponent from \"./components/footer/footer.component\";\nimport NavbarComponent from \"./components/navbar/navbar.component\";\nimport {HashRouter} from \"react-router-dom\";\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.dispatch(handleInitialData())\n    }\n\n    render() {\n        return (\n            <div>\n                <HashRouter basename=\"/\">\n                    <div className=\"header\"><NavbarComponent/></div>\n                    <div className=\"content\">\n                        {this.props.authenticatedUser !== null ? <DashboardComponent/> : <LoadingComponent/>}\n                    </div>\n                    <div className=\"footer\"><FooterComponent/></div>\n                </HashRouter>\n            </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps({authenticatedUser}) {\n    return {\n        authenticatedUser\n    }\n}\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport authenticatedUser from \"./authenticatedUser.reducer\";\r\nimport users from \"./users.reducer\";\r\nimport tweets from \"./tweets.reducer\";\r\n\r\nexport default combineReducers({\r\n    authenticatedUser,\r\n    users,\r\n    tweets\r\n})\r\n","import {AUTHENTICATED_USER_ACTION_TYPES} from \"../actions/authenticatedUser.actions\";\r\n\r\n\r\nexport default function authenticatedUser(state = null, action) {\r\n    switch (action.type) {\r\n        case AUTHENTICATED_USER_ACTION_TYPES.SET_AUTHENTICATED_USER: {\r\n            return action.id\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {USERS_ACTION_TYPES} from \"../actions/users.actions\";\r\n\r\nexport default function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case USERS_ACTION_TYPES.RECEIVE_USERS: {\r\n            return {\r\n                ...state,\r\n                ...action.users\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import {TWEETS_ACTION_TYPES} from \"../actions/tweets.actions\";\r\n\r\nexport default function tweets(state = {}, action) {\r\n    switch (action.type) {\r\n        case TWEETS_ACTION_TYPES.RECEIVE_TWEETS: {\r\n            return {\r\n                ...state,\r\n                ...action.tweets\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.log('The action: ', action);\r\n    const result = next(action);\r\n    console.log('The new state: ', store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n};\r\nexport default logger;\r\n","import thunk from \"redux-thunk\";\r\nimport logger from \"./logger.middleware\";\r\nimport {applyMiddleware} from \"redux\";\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport reducer from './reducers';\nimport middleware from './middlewares';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>,\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}